version: 2.1

commands:
  install_aws_cli:
    steps:
      - run:
          name: Install aws cli
          command: |
            curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
            unzip awscliv2.zip
            sudo ./aws/install

  setup_dependencies:
    description: basic project setup
    steps:
      - restore_cache:
          keys:
            - v1-{{ checksum "setup.py" }}
      - run:
          name: install dependencies
          command: |
            python3 -m venv _venv
            . _venv/bin/activate
            pip install --upgrade pip
            pip install -r requirements.txt
      - save_cache:
          paths:
            - ./_venv/
          key: v1-{{ checksum "setup.py" }}

  setup_environment_variable:
    description: Environment settings
    steps: 
      - run:
          name: Environment settings
          command: |
            if [ $CIRCLE_BRANCH == "master" ]; then
              echo "export AWS_DEFAULT_REGION=ap-northeast-1"                                            >> $BASH_ENV
              echo "export AWS_REGION=ap-northeast-1"                                                    >> $BASH_ENV
              echo "export AWS_DOCKER_REPOSITORY=${AWS_ACCOUNT_ID}.dkr.ecr.ap-northeast-1.amazonaws.com" >> $BASH_ENV
            else
              echo "export AWS_DEFAULT_REGION=ap-northeast-2"                                            >> $BASH_ENV
              echo "export AWS_REGION=ap-northeast-2"                                                    >> $BASH_ENV
              echo "export AWS_DOCKER_REPOSITORY=${AWS_ACCOUNT_ID}.dkr.ecr.ap-northeast-2.amazonaws.com" >> $BASH_ENV
            fi

jobs:
  stats:
    docker:
      - image: circleci/python:3.6.1

    working_directory: ~/crawler-cigar-list

    steps:
      - checkout
      - setup_environment_variable
      - setup_dependencies
      - run:
          name: run codestyle tests
          command: |
            . _venv/bin/activate
            make format-check
      - run:
          name: run tests with coverage
          command: |
            . _venv/bin/activate
            S3_FURI="" pytest --cov=cuban tests/
            coverage html --omit=_venv/* -d /tmp/coverage
      - store_artifacts:
          path: /tmp/coverage

  buildimage:
    docker:
      - image: circleci/python:3.8.3
    working_directory: ~/build/crawler-cigar-list
    steps:
      - checkout
      - setup_dependencies
      - setup_environment_variable
      - install_aws_cli
      - setup_remote_docker
      - run: 
          name: build
          command: |
            aws ecr get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin $AWS_DOCKER_REPOSITORY/$IMAGE_NAME

            docker build -t $IMAGE_NAME:latest -f Dockerfile .
            docker tag $IMAGE_NAME:latest $AWS_DOCKER_REPOSITORY/$IMAGE_NAME:latest
            docker tag $IMAGE_NAME:latest $AWS_DOCKER_REPOSITORY/$IMAGE_NAME:${CIRCLE_SHA1}

            docker push $AWS_DOCKER_REPOSITORY/$IMAGE_NAME:latest
            docker push $AWS_DOCKER_REPOSITORY/$IMAGE_NAME:${CIRCLE_SHA1}
          environment:
            IMAGE_NAME: cigar-crawler/crawler
  release:
    docker:
      - image: circleci/python:3.6.1
    working_directory: ~/build/crawler-cigar-list
    steps:
      - run: |
          echo $CIRCLE_TAG

workflows:
  version: 2
  builds_test:
    jobs:
      - stats
      - buildimage:
          requires:
            - stats
          filters:
            branches:
              only: 
                - master
                - develop
      - release:
          requires:
            - stats
          filters:
            tags:
              only: /^v.*/
            branches:
              ignore: /.*/